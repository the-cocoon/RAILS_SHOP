/ https://developers.facebook.com/docs/reference/opengraph/object-type/product/
/ https://www.seo-cart.com/ecommerce-blog/how-open-graph-data-can-help-boost-your-companys-social-networking/

- meta = object.meta_data

/ TITLE
- title = meta.title.to_s.squish.strip

- if title.blank?
  - title = "Buy #{ object.title }".squish.strip

/ DESCRIPTION
- descr = meta.description.to_s.squish.strip
- descr = descr.present? ? descr : Sanitize.clean(object.content.to_s).squish.strip[0..180]

/ KEYWORDS
- keywords  = meta.keywords.to_s.squish.strip.gsub(/\s*,\s*/, ',')
- keywords  = keywords.present? ? keywords : [ object.inline_tags ].join(',').squish.strip.gsub(/\s*,\s*/, ',')

/ AUTHOR
- author = meta.author
- author = author.present? ? meta.author : "Content Author"

/ TIME format
- tshift   = object.created_at.strftime("%z")
- tshift   = [ tshift[0..2], tshift[3..4] ].join(':')
- pub_time = object.created_at.strftime("%FT%R:%S#{ tshift }")
- mod_time = object.updated_at.strftime("%FT%R:%S#{ tshift }")

/ OG: IMAGE
- og_image = object.main_image.present? ? image_url(object.main_image_url(:v1280x720)) : nil
- og_image = meta.og_image.present? ? meta.og_image : og_image

/ OG: TITLE, DESCRIPTION, SITE NAME, TYPE, URL
- og_title = meta.og_title.present?       ? meta.og_title       : title
- og_descr = meta.og_description.present? ? meta.og_description : descr
- og_sname = meta.og_site_name.present?   ? meta.og_site_name   : 'Site Name'
- og_type  = meta.og_type.present?        ? meta.og_type        : 'article'
- og_url   = meta.og_url.present?         ? meta.og_url         : request.original_url

/ =============== MAIN ===============
- content_for :title do
  = title

meta( name='author'      content=author.strip   )
meta( name='keywords'    content=keywords.strip )
meta( name='description' content=descr.strip    )
/ =============== MAIN ===============

/ =============== OPEN GRAPH ===============
/ http://ogp.me/#no_vertical
/ https://developers.facebook.com/docs/reference/opengraph/object-type/product/

- if og_image.present?
  meta(property="og:image" content=og_image.strip)

meta(property='og:title'       content=og_title.strip)
meta(property='og:description' content=og_descr.strip)
meta(property='og:site_name'   content=og_sname.strip)

meta(property='og:author' content=author)

meta(itemprop='name' content=author)
meta(property='og:type' content=og_type.strip)
meta(property='og:url'  content=og_url.strip itemprop='url')
meta(property="#{ og_type.strip }:Section" content=object.shop_categories.map(&:title).join(',').strip)
meta(property="#{ og_type.strip }:Name"    content=og_title.strip)

meta(property="#{ og_type.strip }:published_time" content=pub_time)
meta(property="#{ og_type.strip }:modified_time"  content=mod_time)

- keywords.split(',').each do |tag|
  meta(property="#{ og_type.strip }:tag" content=tag.to_s.strip.strip)
/ =============== OPEN GRAPH ===============

/ JSON-LD
/ http://www.w3.org/TR/json-ld/
/ http://json-ld.org/
/ http://json-ld.org/playground/index.html

/ MicroData
/ https://schema.org/Product

- content_for :meta_data_microdata do
  div(style='position:absolute;top:0;left:0;width:1px;height:1px;overflow:hidden;')
    - micro_data = { "@context" => "http://schema.org", "@type" => "Article", author: author, name: og_title.strip }
    script(type='application/ld+json')= raw micro_data.to_json
    article(style='position:absolute;top:10px;left:10px;' itemscope=true itemtype='http://schema.org/Article')
      - if og_image.present?
        = image_tag og_image, itemprop: :image
      meta( itemprop='url' content=og_url )
      span( itemprop='author' content=author )= author
      span( itemprop='name' name='name' content=og_title.strip)= og_title.strip
      span( itemprop='article:name' content=og_title.strip)= og_title.strip
      span( itemprop='description')= og_descr.strip
